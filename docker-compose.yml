services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend_app
    restart: always
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://postgres:123456@db:5432/postgres"
      CHOKIDAR_USEPOLLING: "true"
      NODE_ENV: "development"
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        while ! nc -z db 5432; do
          sleep 1
        done &&
        echo 'Database is ready!' &&
        rm -rf prisma/migrations/* &&
        npx prisma migrate reset --force &&
        npx prisma migrate dev --name init &&
        npm run dev
      "
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
  node_modules:

networks:
  app-network:
